version: "3.7"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    networks:
      - elk_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elk_network

  nginx:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      - flask_app
    networks:
      - web_network

  flask_app:
    build: ./flask_app
    container_name: flask_web
    volumes:
      - ./logs/flask:/app/logs
    environment:
      - FLASK_ENV=development
    ports:
      - "5000:5000"
    networks:
      - web_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.2
    container_name: filebeat
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs/nginx:/var/log/nginx
      - ./logs/flask:/var/log/flask
    depends_on:
      - logstash
    networks:
      - elk_network
      - web_network

networks:
  elk_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
